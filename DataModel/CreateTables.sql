-- Generated by Oracle SQL Developer Data Modeler 4.2.0.932
--   at:        2017-07-12 23:02:02 EDT
--   site:      SQL Server 2012
--   type:      SQL Server 2012



CREATE TABLE Account 
    (
     accountId INTEGER NOT NULL IDENTITY   , 
     companyId INTEGER NOT NULL DEFAULT 0 , 
     startDate DATETIME NOT NULL DEFAULT getDate() , 
     updateDate DATETIME ,
	 parentAccountId INTEGER NULL,
	 statusId INTEGER NOT NULL 
    )
    ON "default"
GO

ALTER TABLE Account ADD CONSTRAINT Account_PK PRIMARY KEY CLUSTERED (accountId)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    GO


CREATE TABLE Company 
    (
     companyId INTEGER NOT NULL IDENTITY   , 
     name VARCHAR (200) , 
     phoneNumber VARCHAR (20) , 
     email VARCHAR (50) , 
     country VARCHAR (50) , 
     website VARCHAR (200) , 
     uuid VARCHAR (50) , 
     externalId VARCHAR (50) , 
     createdDate DATETIME NOT NULL DEFAULT getDate() , 
     updateDate DATETIME 
    )
    ON "default"
GO

ALTER TABLE Company ADD CONSTRAINT Company_PK PRIMARY KEY CLUSTERED (companyId)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    GO

CREATE TABLE Creator 
    (
     creatorId INTEGER NOT NULL IDENTITY   , 
     firstName VARCHAR (100) , 
     lastName VARCHAR (100) , 
     fullName VARCHAR (200) , 
     email VARCHAR (100) , 
     language VARCHAR (20) , 
     locale VARCHAR (20) , 
     openId VARCHAR (200) , 
     uuid VARCHAR (50) , 
     createdDate DATETIME NOT NULL DEFAULT getDate() , 
     updateDate DATETIME 
    )
    ON "default"
GO

ALTER TABLE Creator ADD CONSTRAINT Creator_PK PRIMARY KEY CLUSTERED (creatorId)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    GO

CREATE TABLE CreatorAddress 
    (
     uniqueId INTEGER NOT NULL IDENTITY   , 
     creatorId INTEGER NOT NULL , 
     street1 VARCHAR (100) , 
     street2 VARCHAR (100) , 
     state VARCHAR (50) , 
	 city varchar(50),
     country VARCHAR (50) , 
     zip VARCHAR (25) , 
     createdDate DATETIME NOT NULL  DEFAULT getDate(), 
     updatedDate DATETIME 
    )
    ON "default"
GO

ALTER TABLE CreatorAddress ADD CONSTRAINT CreatorAddress_PK PRIMARY KEY CLUSTERED (uniqueId)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    GO

CREATE TABLE Edition 
    (
     Id INTEGER NOT NULL IDENTITY   , 
     code VARCHAR (100) , 
     shortDescription VARCHAR (50) , 
     description VARCHAR (100) , 
     startDate DATETIME NOT NULL DEFAULT getDate() , 
     endDate DATETIME 
    )
    ON "default"
GO

ALTER TABLE Edition ADD CONSTRAINT Edition_PK PRIMARY KEY CLUSTERED (Id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    GO

CREATE TABLE marketPlace 
    (
     Id INTEGER NOT NULL IDENTITY   , 
     partnerName VARCHAR (100) , 
     baseUrl VARCHAR (200) , 
     description VARCHAR (100) , 
     startDate DATETIME NOT NULL DEFAULT getDate() , 
     endDate DATETIME 
    )
    ON "default"
GO

ALTER TABLE marketPlace ADD CONSTRAINT marketPlace_PK PRIMARY KEY CLUSTERED (Id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    GO

CREATE TABLE "Order" 
    (
     orderId INTEGER NOT NULL IDENTITY   , 
     orderTypeId INTEGER NOT NULL , 
     edition VARCHAR(50)  , 
     pricingDuration VARCHAR(50) , 
     startDate DATETIME NOT NULL DEFAULT getdate() , 
     completionDate DATETIME , 
     creatorId INTEGER , 
     marketPlaceId INTEGER NOT NULL ,
	 accountId INTEGER NOT NULL
    )
    ON "default"
GO

ALTER TABLE "Order" ADD CONSTRAINT Order_PK PRIMARY KEY CLUSTERED (orderId)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    GO

CREATE TABLE OrderType 
    (
     Id INTEGER NOT NULL IDENTITY   , 
     code VARCHAR (100) , 
     shortDescription VARCHAR (50) , 
     description VARCHAR (100) , 
     startDate DATETIME NOT NULL DEFAULT getDate() , 
     endDate DATETIME 
    )
    ON "default"
GO

ALTER TABLE OrderType ADD CONSTRAINT OrderType_PK PRIMARY KEY CLUSTERED (Id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    GO

CREATE TABLE PricingDuration 
    (
     Id INTEGER NOT NULL IDENTITY   , 
     code VARCHAR (100) , 
     shortDescription VARCHAR (50) , 
     description VARCHAR (100) , 
     startDate DATETIME NOT NULL DEFAULT getDate() , 
     endDate DATETIME 
    )
    ON "default"
GO

ALTER TABLE PricingDuration ADD CONSTRAINT PricingDuration_PK PRIMARY KEY CLUSTERED (Id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    GO

CREATE TABLE Status 
    (
     Id INTEGER NOT NULL IDENTITY   , 
     code VARCHAR (100) , 
     shortDescription VARCHAR (50) , 
     description VARCHAR (100) , 
     startDate DATETIME NOT NULL DEFAULT getDate() , 
     endDate DATETIME 
    )
    ON "default"
GO

ALTER TABLE Status ADD CONSTRAINT Status_PK PRIMARY KEY CLUSTERED (Id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    GO

CREATE TABLE "User" 
    (
     userId INTEGER NOT NULL IDENTITY   , 
     firstName VARCHAR (100) , 
     lastName VARCHAR (100) , 
     fullName VARCHAR (200) , 
     email VARCHAR (100) , 
     language VARCHAR (20) , 
     locale VARCHAR (20) , 
     openId VARCHAR (200) , 
     uuid VARCHAR (50) , 
	 accountId INTEGER NOT NULL,
     createdDate DATETIME NOT NULL DEFAULT getDate() , 
     updateDate DATETIME ,
	 statusId INTEGER NOT NULL
    )
    ON "default"
GO

ALTER TABLE "User" ADD CONSTRAINT User_PK PRIMARY KEY CLUSTERED (userId)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    GO

CREATE TABLE UserAddress 
    (
     uniqueId INTEGER NOT NULL IDENTITY   , 
     userId INTEGER NOT NULL , 
     street1 VARCHAR (100) , 
     street2 VARCHAR (100) , 
     state VARCHAR (50) , 
	 city varchar(50),
     country VARCHAR (50) , 
     zip VARCHAR (25) , 
     createdDate DATETIME NOT NULL DEFAULT getdate() , 
     updatedDate DATETIME 
    )
    ON "default"
GO

ALTER TABLE UserAddress ADD CONSTRAINT UserAddress_PK PRIMARY KEY CLUSTERED (uniqueId)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    GO

ALTER TABLE Account 
    ADD CONSTRAINT Account_Company_FK FOREIGN KEY 
    ( 
     companyId
    ) 
    REFERENCES Company 
    ( 
     companyId 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE User 
    ADD CONSTRAINT User_Account_FK FOREIGN KEY 
    ( 
     accountId
    ) 
    REFERENCES "Account" 
    ( 
     accountId 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE User 
    ADD CONSTRAINT User_Status_FK FOREIGN KEY 
    ( 
     statusId
    ) 
    REFERENCES "Status" 
    ( 
     Id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Account 
    ADD CONSTRAINT account_Status_FK FOREIGN KEY 
    ( 
     statusId
    ) 
    REFERENCES Status 
    ( 
     Id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE CreatorAddress 
    ADD CONSTRAINT CreatorAddress_Creator_FK FOREIGN KEY 
    ( 
     creatorId
    ) 
    REFERENCES Creator 
    ( 
     creatorId 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE "Order" 
    ADD CONSTRAINT Order_Account_FK FOREIGN KEY 
    ( 
     accountId
    ) 
    REFERENCES Account 
    ( 
     accountId 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE "Order" 
    ADD CONSTRAINT Order_Creator_FK FOREIGN KEY 
    ( 
     creatorId
    ) 
    REFERENCES Creator 
    ( 
     creatorId 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

/*ALTER TABLE "Order" 
    ADD CONSTRAINT Order_Edition_FK FOREIGN KEY 
    ( 
     editionId
    ) 
    REFERENCES Edition 
    ( 
     Id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO */

ALTER TABLE "Order" 
    ADD CONSTRAINT Order_marketPlace_FK FOREIGN KEY 
    ( 
     marketPlaceId
    ) 
    REFERENCES marketPlace 
    ( 
     Id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE "Order" 
    ADD CONSTRAINT Order_OrderType_FK FOREIGN KEY 
    ( 
     orderTypeId
    ) 
    REFERENCES OrderType 
    ( 
     Id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

/*ALTER TABLE "Order" 
    ADD CONSTRAINT Order_PricingDuration_FK FOREIGN KEY 
    ( 
     pricingDurationId
    ) 
    REFERENCES PricingDuration 
    ( 
     Id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO*/

ALTER TABLE UserAddress 
    ADD CONSTRAINT UserAddress_User_FK FOREIGN KEY 
    ( 
     userId
    ) 
    REFERENCES "User" 
    ( 
     userId 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

CREATE TABLE EventType 
    (
     Id INTEGER NOT NULL IDENTITY NOT FOR REPLICATION , 
     code VARCHAR (100) , 
     shortDescription VARCHAR (50) , 
     description VARCHAR (100) , 
     startDate DATETIME NOT NULL DEFAULT getDate() , 
     endDate DATETIME 
    )
    ON "default"
GO

ALTER TABLE EventType ADD CONSTRAINT EventType_PK PRIMARY KEY CLUSTERED (Id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    GO

CREATE TABLE UserEvent 
    (
     eventId INTEGER NOT NULL IDENTITY NOT FOR REPLICATION , 
     eventTypeId INTEGER NOT NULL , 
     startDate DATETIME NOT NULL DEFAULT getdate() , 
     completionDate DATETIME , 
     creatorId INTEGER , 
     marketPlaceId INTEGER NOT NULL , 
     accountId INTEGER NOT NULL , 
     userId INTEGER NOT NULL 
    )
    ON "default"
GO

ALTER TABLE UserEvent ADD CONSTRAINT Orderv1_PK PRIMARY KEY CLUSTERED (eventId)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    GO

ALTER TABLE UserEvent 
    ADD CONSTRAINT UserEvent_Account_FK FOREIGN KEY 
    ( 
     accountId
    ) 
    REFERENCES Account 
    ( 
     accountId 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE UserEvent 
    ADD CONSTRAINT UserEvent_Creator_FK FOREIGN KEY 
    ( 
     creatorId
    ) 
    REFERENCES Creator 
    ( 
     creatorId 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE UserEvent 
    ADD CONSTRAINT UserEvent_EventType_FK FOREIGN KEY 
    ( 
     eventTypeId
    ) 
    REFERENCES EventType 
    ( 
     Id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE UserEvent 
    ADD CONSTRAINT UserEvent_marketPlace_FK FOREIGN KEY 
    ( 
     marketPlaceId
    ) 
    REFERENCES marketPlace 
    ( 
     Id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE UserEvent 
    ADD CONSTRAINT UserEvent_User_FK FOREIGN KEY 
    ( 
     userId
    ) 
    REFERENCES "User" 
    ( 
     userId 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            13
-- CREATE INDEX                             0
-- ALTER TABLE                             27
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE DATABASE                          0
-- CREATE DEFAULT                           0
-- CREATE INDEX ON VIEW                     0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE ROLE                              0
-- CREATE RULE                              0
-- CREATE SCHEMA                            0
-- CREATE SEQUENCE                          0
-- CREATE PARTITION FUNCTION                0
-- CREATE PARTITION SCHEME                  0
-- 
-- DROP DATABASE                            0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
